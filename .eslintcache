[{"/home/amrik/Desktop/Amrik/React/Login-and-Signup-form-using-typescript/src/index.tsx":"1","/home/amrik/Desktop/Amrik/React/Login-and-Signup-form-using-typescript/src/reportWebVitals.ts":"2","/home/amrik/Desktop/Amrik/React/Login-and-Signup-form-using-typescript/src/App.tsx":"3","/home/amrik/Desktop/Amrik/React/Login-and-Signup-form-using-typescript/src/Components/LoginForm.tsx":"4","/home/amrik/Desktop/Amrik/React/Login-and-Signup-form-using-typescript/src/Components/Dashboard.tsx":"5","/home/amrik/Desktop/Amrik/React/Login-and-Signup-form-using-typescript/src/Components/Signup.tsx":"6","/home/amrik/Desktop/Amrik/React/Login-and-Signup-form-using-typescript/src/Components/forgotpassword.tsx":"7","/home/amrik/Desktop/Amrik/React/Login-and-Signup-form-using-typescript/src/Components/redux/rootReducer.tsx":"8","/home/amrik/Desktop/Amrik/React/Login-and-Signup-form-using-typescript/src/Components/redux/types.tsx":"9","/home/amrik/Desktop/Amrik/React/Login-and-Signup-form-using-typescript/src/Components/config.js":"10"},{"size":687,"mtime":1610343935892,"results":"11","hashOfConfig":"12"},{"size":425,"mtime":1610111142379,"results":"13","hashOfConfig":"12"},{"size":615,"mtime":1610111142375,"results":"14","hashOfConfig":"12"},{"size":2807,"mtime":1610372001909,"results":"15","hashOfConfig":"12"},{"size":736,"mtime":1610111142375,"results":"16","hashOfConfig":"12"},{"size":4897,"mtime":1610366648893,"results":"17","hashOfConfig":"12"},{"size":2880,"mtime":1610439410009,"results":"18","hashOfConfig":"12"},{"size":836,"mtime":1610352392084,"results":"19","hashOfConfig":"12"},{"size":158,"mtime":1610352283578,"results":"20","hashOfConfig":"12"},{"size":189,"mtime":1610430520808,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"120knuz",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/amrik/Desktop/Amrik/React/Login-and-Signup-form-using-typescript/src/index.tsx",[],["46","47"],"/home/amrik/Desktop/Amrik/React/Login-and-Signup-form-using-typescript/src/reportWebVitals.ts",[],"/home/amrik/Desktop/Amrik/React/Login-and-Signup-form-using-typescript/src/App.tsx",[],"/home/amrik/Desktop/Amrik/React/Login-and-Signup-form-using-typescript/src/Components/LoginForm.tsx",["48","49"],"\nimport React, { useState, ChangeEvent,  FormEvent } from 'react';\nimport { Row, Col, Form, Button } from 'react-bootstrap'\n\nimport { useHistory } from 'react-router-dom'\nimport config from './config'\nimport axios from 'axios'\ntype TProduct = {\n\t[key: string]: string\n}\nconst Login: React.FC = (): JSX.Element => {\n\tconst history=useHistory()\n\n\tconst [count, setCount] = useState({\n\t\temail: '',\n\t\tpassword: ''\n\t} as TProduct);\n\tconst [errors, setErrors] = useState({ email: '', password: '' } as TProduct);\n\n\tconst onHandleSubmit = (e: FormEvent) => {\n\t\te.preventDefault()\n\t\tconsole.log(\"gjmerlgjlaergkaelrgaekl;rg\")\n\t\tconst inputs = { ...count }\n\t\tlet localErrors = {}\n\n\t\tconst requestOptions: Object = {\n\t\t\tmethod: 'POST',\n\t\t\theaders: { 'Content-Type': 'application/json' },\n\t\t\tdata: JSON.stringify(count),\n\t\t};\n\t\taxios.post(`${config.baseUrl2}`, requestOptions).then((res: any,) => {\n\t\t\tconsole.log(\"Response are\", res,localStorage.setItem('token',res.token))\n\t\t})\n\n\t\tsetErrors({ ...errors, ...localErrors })\n\n\t}\n\n\n\tconst handleChange =(e: ChangeEvent<HTMLInputElement>) => {\n\t\tconst { name, value }: { name: string, value: string } = e.target;\n\t\tconsole.log(name, value, \">>>>>>>>\");\n\t\tsetCount({\n\t\t\t...count,\n\t\t\t[name]: value\n\t\t})\n\t\tsetErrors({\n\t\t\t...errors,\n\t\t\t[name]: \"\"\n\t\t})\n\t}\n\tconst toForgotScreen=()=>{\n\t\thistory.push('/forgotpsw')\n\t}\n\treturn (\n\t\t<div>\n\t\t\t<Row className=\"m-0\">\n\t\t\t\t<Col sm=\"12\" className=\"p-0\">\n\t\t\t\t\t<div className=\"layout-wrapper\">\n\t\t\t\t\t\t<div className=\"form-layout\">\n\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t<Col sm=\"12\" md=\"8\" className=\"form-left-panel p-0\">\n\t\t\t\t\t\t\t\t\t<img src=\"images/back.jpg\" />\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t<Col sm=\"12\" md=\"4\" className=\"form-wrapper\">\n\t\t\t\t\t\t\t\t\t<h2 className=\"title-1\">Welcome!</h2>\n\t\t\t\t\t\t\t\t\t<h1 className=\"title-2\">Let's start together</h1>\n\t\t\t\t\t\t\t\t\t<h3 className=\"pt-4 title-3\"><span>Login</span> your account</h3>\n\t\t\t\t\t\t\t\t\t<Form onSubmit={onHandleSubmit}>\n\t\t\t\t\t\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t\t\t\t\t\t<Form.Label>email</Form.Label>\n\t\t\t\t\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={count.email}\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\n\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t\t\t\t\t\t<Form.Label>PassWord</Form.Label>\n\t\t\t\t\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={count.password}\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t\t<Button variant=\"primary\" type=\"submit\" block>Login</Button>\n\t\t\t\t\t\t\t\t\t</Form>\n\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<div className=\"py-2\">\n\t\t\t\t\t\t\t\t\t\t<span className=\"text-center\">Create Account</span><span className=\"forgot_psw\" onClick={toForgotScreen}>Forgot Password?</span>\n\t\t\t\t\t\t\t\t\t</div>\n\n\n\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t</div>\n\t);\n}\n\nexport default Login;","/home/amrik/Desktop/Amrik/React/Login-and-Signup-form-using-typescript/src/Components/Dashboard.tsx",[],"/home/amrik/Desktop/Amrik/React/Login-and-Signup-form-using-typescript/src/Components/Signup.tsx",["50","51","52","53","54"],"\nimport React, { ChangeEvent, FormEvent, useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom'\nimport { Row, Col, Container, Form, Button } from 'react-bootstrap'\nimport { useDispatch } from 'react-redux';\nimport axios from 'axios'\nimport config from './config'\n\ntype TProduct = {\n\t[key: string]: string\n}\nconst Signup: React.FC = (): JSX.Element => {\n\tconst history = useHistory();\n\tconst dispatch = useDispatch();\t\n\n\tconst [count, setCount] = useState({\n\t\tfirstName: '',\n\t\tlastName: '',\n\t\tuserName: '',\n\t\temail: '',\n\t\tcontact: '',\n\t\tpassword: '',\n\t\tconfirm_password: ''\n\t} as TProduct);\n\tconst [errors, setErrors] = useState({ firstName: '', lastName: '', userName: '', email: '', contact: '', password: '', confirm_password: '' } as TProduct);\n\n\tconst onHandleSubmit = (e: FormEvent) => {\n\t\te.preventDefault();\n\t\tconst inputs = { ...count }\n\t\tlet localErrors = {}\n\n\t\tif (inputs.firstName.length === 0) {\n\t\t\tlocalErrors = { ...localErrors, firstName: \"First name is required!\" };\n\t\t}\n\n\t\tif (inputs.email.length < 5) {\n\t\t\tlocalErrors = { ...localErrors, email: \"Email should be at least 5 charcters long\" }\n\t\t}\n\t\tif (inputs.email.split(\"\").filter(x => x === \"@\").length !== 1) {\n\t\t\tlocalErrors = { ...localErrors, email: \"Email should contain a @\" }\n\t\t}\n\t\tif (inputs.email.indexOf(\".\") === -1) {\n\t\t\tlocalErrors = { ...localErrors, email: \"Email should contain at least one dot\" }\n\t\t}\n\n\t\tif (inputs.password.length < 6) {\n\t\t\tlocalErrors = { ...localErrors, password: \"Password should be at least 6 characters long\" }\n\t\t}\n\t\tif (!Object.keys(localErrors).length) {\n\t\t\tconst requestOptions: Object = {\n\t\t\t\tmethod: 'POST',\n\t\t\t\theaders: { 'Content-Type': 'application/json' },\n\t\t\t\tdata: JSON.stringify(count),\n\t\t\t};\n\t\t\taxios.post(`${config.baseUrl}`, requestOptions).then((res: any) => {\n\t\t\t\tconsole.log(\"Response are\", res)\n\t\t\t})\n\t\t} else {\n\t\t\tsetErrors({ ...errors, ...localErrors })\n\t\t}\n\n\t}\n\n\n\tconst handleChange = (e: ChangeEvent<HTMLInputElement>) => {\n\t\tconst { name, value }: { name: string, value: string } = e.target;\n\t\tconsole.log(name, value, \">>>>>>>>\");\n\t\tsetCount({\n\t\t\t...count,\n\t\t\t[name]: value\n\t\t})\n\t\tsetErrors({\n\t\t\t...errors,\n\t\t\t[name]: \"\"\n\t\t})\n\t}\n\treturn (\n\t\t<div>\n\t\t\t<Row className=\"m-0\">\n\t\t\t\t<Col sm=\"12\" className=\"p-0\">\n\t\t\t\t\t<div className=\"layout-wrapper\">\n\t\t\t\t\t\t<div className=\"form-layout\">\n\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t<Col sm=\"12\" md=\"8\" className=\"form-left-panel p-0\">\n\t\t\t\t\t\t\t\t\t<img src=\"images/back.jpg\" />\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t<Col sm=\"12\" md=\"4\" className=\"form-wrapper\">\n\t\t\t\t\t\t\t\t\t<h2 className=\"title-1\">Welcome!</h2>\n\t\t\t\t\t\t\t\t\t<h1 className=\"title-2\">Let's start together</h1>\n\t\t\t\t\t\t\t\t\t<h3 className=\"pt-4 title-3\"><span>Login</span> your account</h3>\n\t\t\t\t\t\t\t\t\t<Form onSubmit={onHandleSubmit}  >\n\t\t\t\t\t\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t\t\t\t\t\t<Form.Label>First Name</Form.Label>\n\t\t\t\t\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\t\t\t\t\tname=\"firstName\"\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={count.firstName}\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t{(errors && errors.firstName) || \"\"}\n\t\t\t\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t\t\t\t\t\t<Form.Label>Last Name</Form.Label>\n\t\t\t\t\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\t\t\t\t\tname=\"lastName\"\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={count.lastName}\n\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t\t\t\t\t\t<Form.Label>Username</Form.Label>\n\t\t\t\t\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\t\t\t\t\tname=\"userName\"\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={count.userName}\n\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t\t\t\t\t\t<Form.Label>Email</Form.Label>\n\t\t\t\t\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={count.email}\n\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t{(errors && errors.email) || \"\"}\n\t\t\t\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t\t\t\t\t\t<Form.Label>Contact No.</Form.Label>\n\t\t\t\t\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\t\t\t\t\tname=\"contact\"\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={count.contact}\n\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t\t\t\t\t\t<Form.Label>Password</Form.Label>\n\t\t\t\t\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={count.password}\n\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t{(errors && errors.psw) || \"\"}\n\t\t\t\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t\t\t\t\t\t<Form.Label>Confirm Password</Form.Label>\n\t\t\t\t\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\t\t\t\t\tname=\"confirm_password\"\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={count.confirm_password}\n\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t\t\t\t<Button variant=\"primary\" type=\"submit\" block>Signup</Button>\n\t\t\t\t\t\t\t\t\t</Form>\n\t\t\t\t\t\t\t\t\t<div className=\"py-2\">\n\t\t\t\t\t\t\t\t\t\t<span className=\"text-center\">Already have an account?</span>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t</div>\n\t);\n}\n\nexport default Signup;","/home/amrik/Desktop/Amrik/React/Login-and-Signup-form-using-typescript/src/Components/forgotpassword.tsx",["55","56","57"],"\nimport React, { FormEvent,ChangeEvent, useState } from 'react';\nimport { Row, Col, Container, Form, Button } from 'react-bootstrap'\nimport axios from 'axios'\nimport config from './config'\n\ntype TProduct = {\n\t[key: string]: string\n}\nconst Forgotpsw: React.FC = (): JSX.Element => {\n    const [count, setCount] = useState({\n\t\temail: '',\n\t} as TProduct);\n    const [errors, setErrors] = useState({ email: '' } as TProduct);\n    \n\tconst onHandleSubmit = (e: FormEvent) => {\n\t\te.preventDefault()\n\t\tconsole.log(\"gjmerlgjlaergkaelrgaekl;rg\")\n\t\tconst inputs = { ...count }\n\t\tlet localErrors = {}\n\n\t\tconst requestOptions: Object = {\n\t\t\tmethod: 'POST',\n\t\t\theaders: { 'Content-Type': 'application/json' },\n\t\t\tdata: JSON.stringify(count),\n\t\t};\n\t\taxios.post(`${config.baseUrl3}`, requestOptions).then((res: any,) => {\n\t\t\tconsole.log(\"Response are\", res,localStorage.setItem('token',res.token))\n\t\t})\n\n\t\tsetErrors({ ...errors, ...localErrors })\n\n    }\n    const handleChange =(e: ChangeEvent<HTMLInputElement>) => {\n\t\tconst { name, value }: { name: string, value: string } = e.target;\n\t\tconsole.log(name, value, \">>>>>>>>\");\n\t\tsetCount({\n\t\t\t...count,\n\t\t\t[name]: value\n\t\t})\n\t\tsetErrors({\n\t\t\t...errors,\n\t\t\t[name]: \"\"\n\t\t})\n\t}\n\n\n    return (\n        <div>\n            <Row className=\"m-0\">\n                <Col sm=\"12\" className=\"p-0\">\n                    <div className=\"layout-wrapper\">\n                        <div className=\"form-layout\">\n                            <Row>\n                                <Col sm=\"12\" md=\"8\" className=\"form-left-panel p-0\">\n                                    <img src=\"images/back.jpg\" />\n                                </Col>\n                                <Col sm=\"12\" md=\"4\" className=\"form-wrapper\">\n                                    <h3 className=\"pt-4 title-3\"><span>Whats</span> My Password ?</h3>\n                                    <br />\n                                    <Form onSubmit={onHandleSubmit}>\n                                        <Form.Group>\n                                            <Form.Label>Enter Your Email Address</Form.Label>\n                                            <Form.Control\n                                                name=\"email\"\n                                                value={count.email}\n                                                onChange={handleChange}\n                                            />\n                                        </Form.Group>\n\n                                        <br />\n                                        <Button variant=\"primary\" type=\"submit\" block>Send My Password</Button>\n                                    </Form>\n\n\n\n                                </Col>\n                            </Row>\n                        </div>\n                    </div>\n                </Col>\n            </Row>\n        </div>\n    );\n}\n\nexport default Forgotpsw;","/home/amrik/Desktop/Amrik/React/Login-and-Signup-form-using-typescript/src/Components/redux/rootReducer.tsx",[],"/home/amrik/Desktop/Amrik/React/Login-and-Signup-form-using-typescript/src/Components/redux/types.tsx",[],"/home/amrik/Desktop/Amrik/React/Login-and-Signup-form-using-typescript/src/Components/config.js",[],{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":23,"column":9,"nodeType":"64","messageId":"65","endLine":23,"endColumn":15},{"ruleId":"66","severity":1,"message":"67","line":63,"column":10,"nodeType":"68","endLine":63,"endColumn":39},{"ruleId":"62","severity":1,"message":"69","line":2,"column":41,"nodeType":"64","messageId":"65","endLine":2,"endColumn":50},{"ruleId":"62","severity":1,"message":"70","line":4,"column":20,"nodeType":"64","messageId":"65","endLine":4,"endColumn":29},{"ruleId":"62","severity":1,"message":"71","line":13,"column":8,"nodeType":"64","messageId":"65","endLine":13,"endColumn":15},{"ruleId":"62","severity":1,"message":"72","line":14,"column":8,"nodeType":"64","messageId":"65","endLine":14,"endColumn":16},{"ruleId":"66","severity":1,"message":"67","line":85,"column":10,"nodeType":"68","endLine":85,"endColumn":39},{"ruleId":"62","severity":1,"message":"70","line":3,"column":20,"nodeType":"64","messageId":"65","endLine":3,"endColumn":29},{"ruleId":"62","severity":1,"message":"63","line":19,"column":9,"nodeType":"64","messageId":"65","endLine":19,"endColumn":15},{"ruleId":"66","severity":1,"message":"67","line":56,"column":37,"nodeType":"68","endLine":56,"endColumn":66},"no-native-reassign",["73"],"no-negated-in-lhs",["74"],"@typescript-eslint/no-unused-vars","'inputs' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useEffect' is defined but never used.","'Container' is defined but never used.","'history' is assigned a value but never used.","'dispatch' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]